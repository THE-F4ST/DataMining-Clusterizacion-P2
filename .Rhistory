rm(list = ls())
library("dplyr")
library("magrittr")
library("dbscan")
data <- read.csv("C:/Users/andre/OneDrive/Escritorio/MD Clusters/Datasets/boxes (8).csv")
plot(data$x, data$y, col=data$color+1)
#Puede servir una clusterización de densidad
plot(data$x, data$y, col=data$color+1, xlab = "X", ylab = "Y")
#Puede servir una clusterización de densidad
C1 <- dbscan(data, eps = 5, minPts = 5)
plot(data$x, data$y, col = C1$cluster + 1, xlab = "X", ylab = "Y")
plot(data$x, data$y, col = C1$cluster + 1, xlab = "X", ylab = "Y")
#Puede servir una clusterización de densidad
C1 <- dbscan(data, eps = 3, minPts = 5)
plot(data$x, data$y, col = C1$cluster + 1, xlab = "X", ylab = "Y")
#Puede servir una clusterización de densidad
C1 <- dbscan(data, eps = 3, minPts = 5)
plot(data$x, data$y, col = C1$cluster + 1, xlab = "X", ylab = "Y")
#Puede servir una clusterización de densidad
C1 <- dbscan(data, eps = 5, minPts = 5)
plot(data$x, data$y, col = C1$cluster + 1, xlab = "X", ylab = "Y")
hist(data$y)
count(data$y)
table(data$color)
t <- table(data$color)
t
t[1]
t[1,1]
t[1]
t[1][1]
t[1][1]
t[1][1][1]
t
head(t)
t <- data.frame(table(data$color))
head(t)
head(t[1])
head(t[,2])
head(t[2])
head(t[,2])
#### Recibe vectores de clusters reales y clusters estimados ####
ContingenceTable <- function(RealClusters, EstClusters){
EstClustersCardinality <- ClustersCardinality(EstClusters)
RealClustersCardinality <- ClustersCardinality(RealClusters)
CT <- matrix(data = NA,
nrow = length(EstClusters),
ncol = length(RealClusters))
return(CT)
}
#### Regresa vector de cardinalidad de los clusters ####
ClustersCardinality <- function(ClustersVector){
C <- data.frame(table(ClustersVector))
return(C[,2])
}
#### Recibe vectores de clusters reales y clusters estimados ####
ContingenceTable <- function(RealClusters, EstClusters){
EstClustersCardinality <- ClustersCardinality(EstClusters)
RealClustersCardinality <- ClustersCardinality(RealClusters)
Table <- matrix(data = NA,
nrow = length(EstClusters),
ncol = length(RealClusters))
return(CT)
}
#### Regresa vector de cardinalidad de los clusters ####
ClustersCardinality <- function(ClustersVector){
C <- data.frame(table(ClustersVector))
return(C[,2])
}
#### Recibe vectores de clusters reales y clusters estimados ####
ContingenceTable <- function(RealClusters, EstClusters){
EstClustersCardinality <- ClustersCardinality(EstClusters)
RealClustersCardinality <- ClustersCardinality(RealClusters)
Table <- matrix(sum(ClustersCardinality(RealClusters)
- ClustersCardinality(EstClusters)),
nrow = length(EstClusters),
ncol = length(RealClusters))
return(Table)
}
#### Regresa vector de cardinalidad de los clusters ####
ClustersCardinality <- function(ClustersVector){
C <- data.frame(table(ClustersVector))
return(C[,2])
}
source("C:/Users/andre/OneDrive/Escritorio/MD Clusters/functions.R")
rm(list = ls())
library("dplyr")
library("magrittr")
library("dbscan")
source("C:/Users/andre/OneDrive/Escritorio/MD Clusters/functions.R")
source("C:/Users/andre/OneDrive/Escritorio/MD Clusters/functions.R")
data <- read.csv("C:/Users/andre/OneDrive/Escritorio/MD Clusters/Datasets/boxes (8).csv")
plot(data$x, data$y, col = data$color + 1, xlab = "X", ylab = "Y")
#Puede servir una clusterización de densidad
C1 <- dbscan(data, eps = 5, minPts = 5)
plot(data$x, data$y, col = C1$cluster + 1, xlab = "X", ylab = "Y")
ContingenceTable(C1$cluster)
C1
ClustersCardinality(C1$cluster)
length(ClustersCardinality(C1$cluster))
length(data$color)
table(data$color)
length(ClustersCardinality(C1$cluster))
ClustersCardinality(C1$cluster)
#### Recibe vectores de clusters reales y clusters estimados ####
ContingenceTable <- function(RealClusters, EstClusters){
#EstClustersCardinality <- ClustersCardinality(EstClusters)
#RealClustersCardinality <- ClustersCardinality(RealClusters)
Table <- matrix(sum(ClustersCardinality(RealClusters)
- ClustersCardinality(EstClusters)),
nrow = length(EstClusters),
ncol = length(RealClusters))
return(Table)
}
#### Regresa vector de cardinalidad de los clusters ####
ClustersCardinality <- function(ClustersVector){
C <- data.frame(table(ClustersVector))
return(C[,2])
}
source("C:/Users/andre/OneDrive/Escritorio/MD Clusters/functions.R")
ContingenceTable(data$color, C1$cluster)
head(ContingenceTable(data$color, C1$cluster))
length(ContingenceTable(data$color, C1$cluster))
ClustersCardinality(data$color)
ClustersCardinality(data$color)
ClustersCardinality(data$color)
ClustersCardinality(C1$cluster)
C1
C1
C1 <- cbind(cbind(cbind(data$x, data$y), C1$cluster)
C1 <- cbind(cbind(data$x, data$y), C1$cluster)
#Puede servir una clusterización de densidad
C1 <- dbscan(data, eps = 5, minPts = 5)
C1 <- cbind(cbind(data$x, data$y), C1$cluster)
View(C1)
C1 <- data.frame(C1)
View(C1)
colnames(C1) <- c("x", "y", "cluster")
View(C1)
View(data)
